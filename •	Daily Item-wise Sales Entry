import java.io.File;
import java.util.Scanner;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class DailySales {

    public static void dailyItemWiseSalesEntry() {
        List<ItemDetails> itemList = new ArrayList<>();
        Scanner SC2 = new Scanner(System.in);

        try {
            File itemDetailsFile = new File("ItemDetails.txt");
            if (itemDetailsFile.exists()) {
                Scanner fileScanner = new Scanner(itemDetailsFile);
                while (fileScanner.hasNextLine()) {
                    String line = fileScanner.nextLine();
                    if (!line.trim().isEmpty()) {
                        String[] itemDetails = line.split(";");
                        itemList.add(new ItemDetails(
                                itemDetails[0],
                                itemDetails[1],
                                itemDetails[2],
                                Integer.parseInt(itemDetails[3]),
                                Float.parseFloat(itemDetails[4])
                        ));
                    }
                }
                fileScanner.close();
            }
        } catch (IOException e) {
            e.printStackTrace();
            return;
        }

        System.out.println("Daily Item-wise Sales Entry\n");
        System.out.println("Enter the item code: ");
        String itemCode = SC2.nextLine();

        ItemDetails itemToUpdate = null;
        for (ItemDetails item : itemList) {
            if (item.getItemCode().equals(itemCode)) {
                itemToUpdate = item;
                break;
            }
        }

        if (itemToUpdate == null) {
            System.out.println("Item code not found.");
            return;
        }

        System.out.println("\nItem name: " + itemToUpdate.getItemName());
        System.out.println("Item remaining quantity: " + itemToUpdate.getStockQuantity());
        System.out.println("\nEnter the quantity sold: ");
        int quantitySold = SC2.nextInt();
        SC2.nextLine(); // Consume the newline character

        int updatedStock = itemToUpdate.getStockQuantity() - quantitySold;
        if (updatedStock < 0) {
            System.out.println("Not enough stock available.");
            return;
        }

        itemToUpdate.StockQuantity = updatedStock;

        try {
            try (FileWriter writer = new FileWriter("ItemDetails.txt")) {
                for (ItemDetails item : itemList) {
                    writer.write(item.toString());
                    writer.write(System.lineSeparator());
                }
            }
            System.out.println("\nDaily sales entry recorded successfully!");

        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Error occurred while updating the record.");
        }
    }
}
