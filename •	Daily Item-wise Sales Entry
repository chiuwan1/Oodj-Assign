package UserLoginSystem;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package oodj.assign;

import java.io.File;
import java.util.Scanner;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DailySales {

    public static void dailyItemWiseSalesEntry() {
        Date currentDate = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = dateFormat.format(currentDate);
        List<ItemDetails> itemList = new ArrayList<>();
        Scanner SC2 = new Scanner(System.in);

        try {
            File itemDetailsFile = new File("ItemDetails.txt");
            if (itemDetailsFile.exists()) {
                Scanner fileScanner = new Scanner(itemDetailsFile);
                while (fileScanner.hasNextLine()) {
                    String line = fileScanner.nextLine();
                    if (!line.trim().isEmpty()) {
                        String[] itemDetails = line.split(";");
                        itemList.add(new ItemDetails(
                                itemDetails[0],
                                itemDetails[1],
                                itemDetails[2],
                                Integer.parseInt(itemDetails[3]),
                                Float.parseFloat(itemDetails[4])
                        ));
                    }
                }
                fileScanner.close();
            }
        } catch (IOException e) {
            e.printStackTrace();
            return;
        }

        System.out.println("Daily Item-wise Sales Entry\n");
        System.out.println("Date: "+ dateFormat.format(currentDate));
        System.out.println("Enter the item code: ");
        String itemCode = SC2.nextLine();

        ItemDetails itemToUpdate = null;
        for (ItemDetails item : itemList) {
            if (item.getItemCode().equals(itemCode)) {
                itemToUpdate = item;
                break;
            }
        }

        if (itemToUpdate == null) {
            System.out.println("Item code not found.");
            return;
        }

        System.out.println("\nItem name: " + itemToUpdate.getItemName());
        System.out.println("Item remaining quantity: " + itemToUpdate.getStockQuantity());
        int quantitySold = 0;                       
        while (true) {
            try {
                System.out.println("\nEnter the quantity sold: ");
                quantitySold = Integer.parseInt(SC2.nextLine());
                break;
            } catch (NumberFormatException e) {
                System.out.println("Please enter a valid integer value for Item Quantity Sold!");
            }
        }
        int updatedStock = itemToUpdate.getStockQuantity() - quantitySold;
        if (updatedStock < 0) {
            System.out.println("\nNot enough stock available");
            return;
        }

        itemToUpdate.setStockQuantity(updatedStock);

        try {
            try (FileWriter writer = new FileWriter("ItemDetails.txt")) {
                for (ItemDetails item : itemList) {
                    writer.write(item.toString());
                    writer.write(System.lineSeparator());
                }
                try (FileWriter soldItemWriter = new FileWriter("ItemSold.txt", true)) {
                    soldItemWriter.write(formattedDate + ";" + itemToUpdate.getItemCode() + ";" + quantitySold);
                    soldItemWriter.write(System.lineSeparator());
                }
            }
            System.out.println("\nRemaining quantity: " +updatedStock);
            System.out.println("\nDaily sales entry recorded successfully!");

        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Error occurred while updating the record.");
        }
    }
}

