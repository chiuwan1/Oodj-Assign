package UserLoginSystem;

import java.io.*;
import java.util.*;

public class JavaAssignment {

    private static final String FILE_PATH = "users.txt";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        boolean loggedIn = false;

        while (!loggedIn) {
            System.out.println("Choose your login identity:");
            System.out.println("1. Sales Manager");
            System.out.println("2. Purchase Manager");
            System.out.println("3. Administrator");
            System.out.print("Enter your choice (1/2/3): ");
            int choice = scanner.nextInt();

            scanner.nextLine(); // Consume the newline left by nextInt()

            switch (choice) {
                case 1:
                    loggedIn = loginUser("Sales Manager");
                    Switch_Menu menu1 = new SM_menu();
                    menu1.menu();
                    break;
                case 2:
                    loggedIn = loginUser("Purchase Manager");
                    Switch_Menu menu2 = new PM_menu();
                    menu2.menu();
                    break;
                case 3:
                    if (isAdminLoggedIn()) {
                        System.out.println("Administrator logged in successfully.");
                        addNewUser();
                    } else {
                        System.out.println("Administrator login failed. Exiting.");
                    }
                    loggedIn = true;
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }

        scanner.close();
    }

    private static String loggedInUsername = null;

    // This method returns the username of the logged-in user
    public static String getLoggedInUsername() {
        return loggedInUsername;
    }

    private static boolean loginUser(String identity) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        User user = null; //Declare a Yser reference

        // Create the appropriate user instance based on the provided identity
        if ("Sales Manager".equalsIgnoreCase(identity)) {
            user = new SalesManager(username, password);
        } else if ("Purchase Manager".equalsIgnoreCase(identity)) {
            user = new PurchaseManager(username, password);
        }
        // Add similar cases for other user roles like Administrator

        if (user != null && user.getUsername().equals(username) && user.getPassword().equals(password)) {
            System.out.println(identity + " logged in successfully.");
            loggedInUsername = username;
            return true;
        }

        System.out.println("Login failed. Please try again.");
        return false;
    }

    private static boolean isAdminLoggedIn() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter administrator username: ");
        String username = scanner.nextLine();
        System.out.print("Enter administrator password: ");
        String password = scanner.nextLine();

        try (BufferedReader br = new BufferedReader(new FileReader(FILE_PATH))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] userCredentials = line.split(",");
                String storedIdentity = userCredentials[0].trim();
                String storedUsername = userCredentials[1].trim();
                String storedPassword = userCredentials[2].trim();

                if ("Administrator".equalsIgnoreCase(storedIdentity) && username.equals(storedUsername) && password.equals(storedPassword)) {
                    return true;
                }
            }
        } catch (IOException e) {
            System.out.println("An error occurred while reading the user file.");
            e.printStackTrace();
        }

        return false;
    }

    private static void addNewUser() {
        try {
            List<String> allUserData = new ArrayList<>();

            // Read all existing data from the original "users.txt" file
            try (BufferedReader br = new BufferedReader(new FileReader(FILE_PATH))) {
                String line;
                while ((line = br.readLine()) != null) {
                    allUserData.add(line);
                }
            }

            // Get the new user's data
            Scanner scanner = new Scanner(System.in);
            System.out.print("Enter the new user's identity (Sales Manager/Purchase Manager/Administrator): ");
            String identity = scanner.nextLine();
            System.out.print("Enter the new user's username: ");
            String username = scanner.nextLine();
            System.out.print("Enter the new user's password: ");
            String password = scanner.nextLine();

            // Add the new user data to the in-memory list
            allUserData.add(identity + ", " + username + ", " + password);

            // Write all the data back to the original "users.txt" file
            try (BufferedWriter bw = new BufferedWriter(new FileWriter(FILE_PATH))) {
                for (String userData : allUserData) {
                    bw.write(userData);
                    bw.newLine();
                }
                System.out.println("New user added successfully.");
            }
        } catch (IOException e) {
            System.out.println("An error occurred while adding the new user.");
            e.printStackTrace();
        }
    }

    // Define user subclasses as inner classes
    private static class User {

        private String identity;
        private String username;
        private String password;

        public User(String identity, String username, String password) {
            this.identity = identity;
            this.username = username;
            this.password = password;
        }

        public String getIdentity() {
            return identity;
        }

        public String getUsername() {
            return username;
        }

        public String getPassword() {
            return password;
        }
    }

    private static class Administrator extends User {

        public Administrator(String username, String password) {
            super("Administrator", username, password);
        }
    }

    private static class SalesManager extends User {

        public SalesManager(String username, String password) {
            super("Sales Manager", username, password);
        }
    }

    private static class PurchaseManager extends User {

        public PurchaseManager(String username, String password) {
            super("Purchase Manager", username, password);
        }
    }

}
