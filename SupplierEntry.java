import java.io.*;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;


public class SupplierDetails {

    private String SupplierCode;
    private String SupplierName;
    private String SupplierPhoneNumber;
    private String SupplierEmailAddress;

    private String ItemID;

    public SupplierDetails(String SupplierCode, String SupplierName, String SupplierPhoneNumber, String SupplierEmailAddress,  String ItemID) {
        this.SupplierCode = SupplierCode;
        this.SupplierName = SupplierName;
        this.SupplierPhoneNumber = SupplierPhoneNumber;
        this.SupplierEmailAddress = SupplierEmailAddress;
        this.ItemID = ItemID;
    }

    public String getSupplierCode() {
        return SupplierCode;
    }
    public String getSupplierName() {
        return SupplierName;
    }
    public String getSupplierPhoneNumber() {
        return SupplierPhoneNumber;
    }
    public String getSupplierEmailAddress() {
        return SupplierEmailAddress;
    }
    public String getItemID() {
        return ItemID;
    }
    
    public void setSupplierCode(String SupplierCode){this.SupplierCode =SupplierCode;}
    public void setSupplierName(String SupplierName){this.SupplierName =SupplierName;}
    public void setSupplierPhoneNumber(String SupplierPhoneNumber){this.SupplierPhoneNumber =SupplierPhoneNumber;}
    public void setSupplierEmailAddress(String SupplierEmailAddress){this.SupplierEmailAddress =SupplierEmailAddress;}
    public void setItemID(String ItemID){this.ItemID =ItemID;}

    // i didnt use this
    @Override
    public String toString() {
        return SupplierCode + ";" + SupplierName + ";" + SupplierPhoneNumber + ";" + SupplierEmailAddress + ";"  + ItemID;
    }

    public static void addSupplierDetail() {
        List<SupplierDetails> supplierList = new ArrayList<>(); //Storing the parameterized constructor into the list named as SupplierList using ArrayList
        Scanner SupplierInputs = new Scanner(System.in);

        int SupplierNo;
        String autogeneratedSupplierCode = null;
        for (int i = 1; i <= 9999; i++) {
            SupplierNo = i;
            autogeneratedSupplierCode = String.format("S%04d", SupplierNo);
            boolean x = checkSupplierCode(autogeneratedSupplierCode);//if the Supplier code exist, it return false
            if (x) {
                break;
            } //if x is true, then it break the loop
        }
        
        
        System.out.println("Supplier Entry");
        System.out.println("Enter Supplier Name:");
        String SupplierName = SupplierInputs.nextLine();
        System.out.println("Enter Supplier Phone Number:");
        String SupplierPhoneNumber = SupplierInputs.nextLine();
        System.out.println("Enter Supplier Email Address:");
        String SupplierEmailAddress = SupplierInputs.nextLine();
        System.out.println("Enter Item ID:");
        String ItemID = SupplierInputs.nextLine();

        SupplierDetails Supplier = new SupplierDetails(autogeneratedSupplierCode, SupplierName, SupplierPhoneNumber, SupplierEmailAddress, ItemID);
        supplierList.add(Supplier);
        
        boolean nextItemstate = true;
        while(nextItemstate){
        System.out.println("Would you like to add another item? [yes/no]");
        Scanner anotherItem = new Scanner(System.in);
        String ItemState= anotherItem.nextLine().trim().toLowerCase();
            switch (ItemState) {
                case "yes" -> {
                    System.out.println("Enter Item ID:");
                    String anotherItemID = anotherItem.nextLine();
                    SupplierDetails sameSupplier = new SupplierDetails(autogeneratedSupplierCode, SupplierName, SupplierPhoneNumber, SupplierEmailAddress, anotherItemID);
                    supplierList.add(sameSupplier);
                    try (BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("SupplierList.txt", true))) {
                        bufferedWriter.write(System.lineSeparator());
                        bufferedWriter.write(sameSupplier.toString());

                    } catch (IOException e) {
                        System.out.println("Error while saving the record!");
                    }
                }
                case "no" -> {
                    nextItemstate = false;
                    break;
                }
            }

        }
        
        boolean validInput = false;
        while (!validInput) {
            System.out.println("Would you like to save the record?[yes/no]");
            Scanner scanner = new Scanner(System.in);
            String input = scanner.nextLine().trim().toLowerCase();

            switch (input) {
                case "yes" -> {
                    try (BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("SupplierList.txt", true))) {
                        bufferedWriter.write(System.lineSeparator());
                        bufferedWriter.write(Supplier.toString());

                        /*
                        try (BufferedWriter bufferedWriterRaw = new BufferedWriter(new FileWriter("SupplierListraw.txt", true))) {
                            bufferedWriterRaw.write(String.format("%-20s %-20s %-20s %-20s %-20s  %n", "Supplier Code", "Name", "Phone Number", "Email",  "Item ID"));
                            bufferedWriterRaw.write(String.format("%-20s %-20s %-20s %-20s %-20s  %n", autogeneratedSupplierCode, SupplierName, SupplierPhoneNumber, SupplierEmailAddress, ItemID));
                        }
                        */
                    } catch (IOException e) {
                        System.out.println("Error while saving the record!");
                    }

                    System.out.println("The list is saved as SupplierList.txt");
                    validInput = true;
                }
                case "no" -> {
                    validInput = true;
                }
                default ->
                    System.out.println("Invalid input.Please enter yes or no");

            }

        }
    }

    public static boolean checkSupplierCode(String suppliercode) {
        try {
            File SupplierList = new File("SupplierList.txt");
            if (SupplierList.exists()) {
                try (Scanner SupplierListFileScanner = new Scanner(SupplierList)) {
                    while (SupplierListFileScanner.hasNextLine()) {
                        String line = SupplierListFileScanner.nextLine();
                        if (!line.trim().isEmpty()) {
                            String[] supplierlist = line.split(";");

                            if (supplierlist[0].equals(suppliercode)) {
                                return false;
                            }
                        }
                    }
                }
            }
        } catch (IOException e) {
            System.out.println("Error!");
        }
        return true;
    }

    public static void deleteSupplierDetail() {
        List<SupplierDetails> supplierList = new ArrayList<>();
        List<String> supplierlist = new ArrayList<>();
        Scanner deleteScanner = new Scanner(System.in);
        System.out.println("Enter the Supplier Code to delete:");
        String CodeForDelete = deleteScanner.nextLine();
        try {
            File SupplierList = new File("SupplierList.txt");
            BufferedReader reader = new BufferedReader(new FileReader(SupplierList));
            String line;
            int lineNumber = 0;
            int LineNumber = 0;
            int numbertodelete = 0;
            String SetError = null;
//here is right
            while ((line = reader.readLine()) != null) {
                supplierlist.add(line);//the program read the output text file and directly put each line into the list
                lineNumber++;
                String[] supplier_list = line.split(";");

                if (supplier_list[0].equals(CodeForDelete)) {
                    LineNumber = lineNumber - 1; //minus 1 due to the index of list start from 0
                    numbertodelete = numbertodelete + 1;
                    SetError = CodeForDelete;
                    //System.out.println(numbertodelete);
                    //System.out.println(lineNumber);
                }
            }
            if (SetError != null) {
                boolean validInput = false;
                while (!validInput) {
                    System.out.println("Would you like to delete the record?[yes/no]");
                    Scanner scanner = new Scanner(System.in);
                    String input = scanner.nextLine().trim().toLowerCase();
                    switch (input) {
                        case "yes" -> {
                            int firstIndex = LineNumber-numbertodelete + 1;
                            //System.out.println(firstIndex);
                            //System.out.println(LineNumber);
                            List<String> rangeofelements = supplierlist.subList(firstIndex,LineNumber+1);
                            supplierlist.removeAll(rangeofelements);
                            
                            try (BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("SupplierList.txt"))) {
                                for (String printline : supplierlist) {
                                    bufferedWriter.write(printline + System.lineSeparator());
                                }
                            }
                            System.out.println("The list is saved as SupplierList.txt");
                            validInput = true;
                        }
                        case "no" -> {
                            validInput = true;
                        }
                        default ->
                            System.out.println("Invalid input.Please enter yes or no");
                    }
                }
            } else {
                System.out.println("Supplier Code  not exist!");
            }
            //until here

        } catch (IOException e) {
            System.out.println("Sorry, there is no Supplier Detail!");
        }
    }
  
    public static void editSupplier() {
        List<SupplierDetails> editsupplierList = new ArrayList<>();
        List<String> Editsupplierlist = new ArrayList<>();
        Scanner deleteScanner = new Scanner(System.in);
        System.out.println("Enter the Supplier Code to edit:");
        String CodeForDelete = deleteScanner.nextLine();
        try {
            File SupplierList = new File("SupplierList.txt");
            BufferedReader reader = new BufferedReader(new FileReader(SupplierList));
            String line;
            int lineNumber = 0;
            int LineNumber = 0;
            int numbertoedit = 0;
            String SetError = null;
//here is right
            while ((line = reader.readLine()) != null) {
                Editsupplierlist.add(line);//the program read the output text file and directly put each line into the list
                lineNumber++;
                String[] supplier_list = line.split(";");

                if (supplier_list[0].equals(CodeForDelete)) {
                    LineNumber = lineNumber - 1; //minus 1 due to the index of list start from 0
                    numbertoedit = numbertoedit + 1;
                    SetError = CodeForDelete;
                    //System.out.println(numbertodelete);
                    //System.out.println(lineNumber);
                }
            }
            if (SetError != null) {
                boolean validInput = false;
                while (!validInput) {
                    System.out.println("Would you like to edit the record?[yes/no]");
                    Scanner scanner = new Scanner(System.in);
                    String input = scanner.nextLine().trim().toLowerCase();
                    switch (input) {
                        case "yes" -> {
                            int firstIndex = LineNumber-numbertoedit + 1;
                            //System.out.println(firstIndex);
                            //System.out.println(LineNumber);
                            List<String> rangeofelements = Editsupplierlist.subList(firstIndex,LineNumber+1);
                            Editsupplierlist.removeAll(rangeofelements);
                            try (BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("SupplierList.txt"))) {
                                for (String printline : Editsupplierlist) {
                                    bufferedWriter.write(printline + System.lineSeparator());
                                }
                            }
                            System.out.println("The list is saved as SupplierList.txt");
                            validInput = true;
                        }
                        case "no" -> {
                            validInput = true;
                        }
                        default ->
                            System.out.println("Invalid input.Please enter yes or no");
                    }
                }
            } else {
                System.out.println("Supplier Code  not exist!");
            }
            //until here

        } catch (IOException e) {
            System.out.println("Sorry, there is no Supplier Detail!");
        }
        addSupplierDetail();
        }
    
    public static void editSuppliertried() {

        Scanner EditScanner = new Scanner(System.in);
        Scanner NewInput = new Scanner(System.in);
        List<SupplierDetails> detailtoEdit = new ArrayList<>();
        List<String> editsupplierlist = new ArrayList<>();

        System.out.println("Enter the Supplier Code to edit the details");
        String codeForEdit = EditScanner.nextLine();
        try (BufferedReader reader = new BufferedReader(new FileReader("SupplierList.txt"))) {
        
            String line;
            int number = 0;
            while ((line = reader.readLine()) != null) {
                editsupplierlist.add(line);
                String[] editsupplier_list = line.split(";");
                
                detailtoEdit.add(new SupplierDetails(editsupplier_list[0],editsupplier_list[1],editsupplier_list[2],editsupplier_list[3],editsupplier_list[4]));
                
                System.out.println(detailtoEdit);

                boolean foundFirstDetail = false;
                SupplierDetails FirstDetail = null;
                if (editsupplier_list[0].equals(codeForEdit)) {
                    number++;
                    if (number++ == 1)
                        number = number-1;
                    System.out.println(number++);
                    SupplierDetails newDetails = null;

                    for (SupplierDetails detail : detailtoEdit) {
                        if (detail.getSupplierCode().equals(codeForEdit)) {
                            if(!foundFirstDetail){
                            foundFirstDetail = true;
                            FirstDetail = detail;
                            } else {
                                System.out.println("Enter Supplier Name:");
                                String NewSupplierName = NewInput.nextLine();
                                System.out.println("Enter Supplier Phone Number:");
                                String NewSupplierPhoneNumber = NewInput.nextLine();
                                System.out.println("Enter Supplier Email Address:");
                                String NewSupplierEmailAddress = NewInput.nextLine();
                                System.out.println("Enter Item ID:");
                                String NewItemID = NewInput.nextLine();
                                
                                detail.setSupplierName(NewSupplierName);
                                detail.setSupplierPhoneNumber(NewSupplierPhoneNumber);
                                detail.setSupplierEmailAddress(NewSupplierEmailAddress);
                                detail.setItemID(NewItemID);
                                
                                break;

                            }
                        }
                    }

                    if (FirstDetail != null){
                        System.out.println("Enter Supplier Name:");
                        String NewSupplierName = NewInput.nextLine();
                        System.out.println("Enter Supplier Phone Number:");
                        String NewSupplierPhoneNumber = NewInput.nextLine();
                        System.out.println("Enter Supplier Email Address:");
                        String NewSupplierEmailAddress = NewInput.nextLine();
                        System.out.println("Enter Item ID:");
                        String NewItemID = NewInput.nextLine();
                        FirstDetail.setSupplierName(NewSupplierName);
                        FirstDetail.setSupplierPhoneNumber(NewSupplierPhoneNumber);
                        FirstDetail.setSupplierEmailAddress(NewSupplierEmailAddress);
                        FirstDetail.setItemID(NewItemID);
                    }
                    
                    //String newEditline = newDetails.getSupplierCode() + ";" + newDetails.getSupplierName() + ";" + newDetails.getSupplierPhoneNumber() + ";" + newDetails.getSupplierEmailAddress() + ";" + newDetails.getItemID();

                }
                        
                try (BufferedWriter writer = new BufferedWriter(new FileWriter("SupplierList.txt"))) {
                    /*
                    for (String printline : editsupplierlist){
                        writer.write(printline + System.lineSeparator());}
                    */
                    for (SupplierDetails detail : detailtoEdit) {
                        writer.write(detail.toString());
                        writer.write(System.lineSeparator());
                    }

                }
            }
        } catch (IOException e) {
            System.out.println("Error!");
        }
    }
    
    public static void editSupplierlastAttempt(){
        Scanner EditScanner = new Scanner(System.in);
        Scanner NewEditInput = new Scanner(System.in);
        System.out.println("Enter the Supplier Code to edit the details");
        String codeForEdit = EditScanner.nextLine();
        //List<SupplierDetails> newlist = new ArrayList<>();
        List<String> supplierlist = new ArrayList<>();
        List<SupplierDetails> detailtoEdit = new ArrayList<>();
        
        try (BufferedReader reader = new BufferedReader(new FileReader("SupplierList.txt"))) {
            int number =0;
            int linenumber = 0;
            int Linenumber = 0;
            int fix = 0;
            String line;
            
            while ((line = reader.readLine()) != null) {
                supplierlist.add(line);
                linenumber++;
                //System.out.println(supplierlist);
                String[] editsupplier_list = line.split(";");
                detailtoEdit.add(new SupplierDetails(editsupplier_list[0],editsupplier_list[1],editsupplier_list[2],editsupplier_list[3],editsupplier_list[4]));
                //System.out.println(line);
                
                if (editsupplier_list[0].equals(codeForEdit)) {
                    number++;
                    Linenumber = linenumber;
                    fix = Linenumber;
                    
                }
            }
            int StartofIndex = Linenumber - number;
            System.out.println("Enter Supplier Name:");
            String EditSupplierName = NewEditInput.nextLine();
            System.out.println("Enter Supplier Phone Number:");
            String EditSupplierPhoneNumber = NewEditInput.nextLine();
            System.out.println("Enter Supplier Email Address:");
            String EditSupplierEmailAddress = NewEditInput.nextLine();
            
            SupplierDetails modifiedSupplier = detailtoEdit.get(Linenumber - StartofIndex - 1);
            modifiedSupplier.setSupplierCode(codeForEdit);
            modifiedSupplier.setSupplierName(EditSupplierName);
            modifiedSupplier.setSupplierPhoneNumber(EditSupplierPhoneNumber);
            modifiedSupplier.setSupplierEmailAddress(EditSupplierEmailAddress);          
            for(Linenumber = fix; Linenumber> StartofIndex; Linenumber--)
            {
                System.out.println("Enter Item ID:");
                String EditItemID = NewEditInput.nextLine();
                modifiedSupplier.setItemID(EditItemID);
                // Update the supplierlist with modified details
                supplierlist.set(Linenumber - 1, modifiedSupplier.toString()); // Adjust this line based on your SupplierDetails class structure
                System.out.println(supplierlist.get(Linenumber - 1));
            }
            System.out.println(supplierlist);
            try (BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("SupplierList.txt"))) {
                //bufferedWriter.write(System.lineSeparator());
                 while ((line = reader.readLine()) != null) {

                bufferedWriter.write(line);
                bufferedWriter.newLine();}
                 
                for (String printline : supplierlist) {
                    bufferedWriter.write(printline + System.lineSeparator());
                }
            }

        } catch (IOException e) {
            System.out.println("Error!");
        }
    }
    
}

